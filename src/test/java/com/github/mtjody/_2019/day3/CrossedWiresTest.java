package com.github.mtjody._2019.day3;

import java.util.ArrayList;
import java.util.List;

import org.testng.Assert;
import org.testng.annotations.Test;

public class CrossedWiresTest {

    @Test(groups = "day3")
    public void testExample1() {
        List<String[]> testInputData = new ArrayList<>();
        String[] firstWire = {"R8","U5","L5","D3"};
        String[] secondWire = {"U7","R6","D4","L4"};
        testInputData.add(firstWire);
        testInputData.add(secondWire);
        CrossedWires cw = new CrossedWires(testInputData);

        List<Point> points = cw.getIntersectionPoints();
        Assert.assertNotNull(points, "Points was null");
        Assert.assertEquals(points.size(), 2, "Wrong amount of intersection points");

        int distance = cw.getManhattanDistance(points);
        Assert.assertEquals(distance, 6, "Nope");

        int fewestCombinedSteps = cw.getFewestCombinedSteps(points);
        Assert.assertEquals(fewestCombinedSteps, 30, "Nope");
    }

    @Test(groups = "day3")
    public void testExample2() {
        List<String[]> testInputData = new ArrayList<>();
        String[] firstWire = {"R75","D30","R83","U83","L12","D49","R71","U7","L72"};
        String[] secondWire = {"U62","R66","U55","R34","D71","R55","D58","R83"};
        testInputData.add(firstWire);
        testInputData.add(secondWire);
        CrossedWires cw = new CrossedWires(testInputData);

        List<Point> points = cw.getIntersectionPoints();
        Assert.assertNotNull(points, "Points was null");

        int distance = cw.getManhattanDistance(points);
        Assert.assertEquals(distance, 159);

        int fewestCombinedSteps = cw.getFewestCombinedSteps(points);
        Assert.assertEquals(fewestCombinedSteps, 610, "Nope");
    }

    @Test(groups = "day3")
    public void testExample3() {
        List<String[]> testInputData = new ArrayList<>();
        String[] firstWire = {"R98","U47","R26","D63","R33","U87","L62","D20","R33","U53","R51"};
        String[] secondWire = {"U98","R91","D20","R16","D67","R40","U7","R15","U6","R7"};
        testInputData.add(firstWire);
        testInputData.add(secondWire);
        CrossedWires cw = new CrossedWires(testInputData);

        List<Point> points = cw.getIntersectionPoints();
        Assert.assertNotNull(points, "Points was null");

        int distance = cw.getManhattanDistance(points);
        Assert.assertEquals(distance, 135);

        int fewestCombinedSteps = cw.getFewestCombinedSteps(points);
        Assert.assertEquals(fewestCombinedSteps, 410, "Nope");
    }
    
    @Test(groups = "day3")
    public void testRedditOther() {
        List<String[]> testInputData = new ArrayList<>();
        String[] firstWire = {"R997","D99","R514","D639","L438","D381","L251","U78","L442","D860","R271","U440","L428","U482","R526","U495","R361","D103","R610","D64","L978","U587","L426","D614","R497","D116","R252","U235","R275","D882","L480","D859","L598","D751","R588","D281","R118","U173","L619","D747","R994","U720","L182","U952","L49","D969","R34","D190","L974","U153","L821","U593","L571","U111","L134","U111","R128","D924","R189","U811","R100","D482","L708","D717","L844","U695","R277","D81","L107","U831","L77","U609","L629","D953","R491","D17","R160","U468","R519","D41","R625","D501","R106","D500","R473","D244","R471","U252","R440","U326","R710","D645","L190","D670","L624","D37","L46","D242","L513","D179","R192","D100","R637","U622","R322","U548","L192","D85","L319","D717","L254","D742","L756","D624","L291","D663","R994","U875","R237","U304","R40","D399","R407","D124","R157","D415","L405","U560","R607","U391","R409","U233","R305","U346","L233","U661","R213","D56","L558","U386","R830","D23","L75","D947","L511","D41","R927","U856","L229","D20","L717","D830","R584","U485","R536","U531","R946","U942","R207","D237","L762","U333","L979","U29","R635","D386","R267","D260","R484","U887","R568","D451","R149","U92","L379","D170","R135","U799","L617","D380","L872","U868","R48","U279","R817","U572","L728","D792","R833","U788","L940","D306","R230","D570","L137","U419","L429","D525","L730","U333","L76","D435","R885","U811","L937","D320","R152","U906","L461","U227","L118","U951","R912","D765","L638","U856","L193","D615","L347","U303","R317","U23","L139","U6","L525","U308","L624","U998","R753","D901","R556","U428","L224","U953","R804","D632","L764","U808","L487","U110","L593","D747","L659","D966","R988","U217","L657","U615","L425","D626","L194","D802","L440","U209","L28","U110","L564","D47","R698","D938","R13","U39","R703","D866","L422","D855","R535","D964","L813","D405","R116","U762","R974","U568","R934","U574","R462","D968","R331","U298","R994","U895","L204","D329","R982","D83","L301","D197","L36","U329","R144","U497","R300","D551","L74","U737","R591","U374","R815","U771","L681"};
        String[] secondWire = {"L997","D154","R652","U379","L739","U698","R596","D862","L125","D181","R786","U114","R536","U936","L144","U936","R52","U899","R88","D263","R122","D987","L488","U303","R142","D556","L691","D769","L717","D445","R802","U294","L468","D13","R301","D651","L242","D767","R465","D360","L144","D236","R59","U815","R598","U375","R645","U905","L714","U440","R932","D160","L420","U361","L433","D485","L276","U458","R760","D895","R999","U263","R530","U691","L918","D790","L150","U574","R800","U163","R478","U112","L353","U30","L763","U239","L353","U619","R669","D822","R688","U484","L678","D88","R946","D371","L209","D175","R771","D85","R430","U16","R610","D326","R836","U638","L387","D996","L758","U237","L476","U572","L456","U579","L457","D277","L825","U204","R277","U267","L477","D573","L659","D163","L516","D783","R762","U146","L387","U700","R911","U335","L115","D887","R677","U312","R707","U463","L743","U358","L715","D603","R966","U21","L857","D680","R182","D977","L279","U196","R355","D624","L434","U410","R385","U47","L999","D542","L453","D735","R781","U115","R814","U110","R344","D139","R899","D650","L118","D774","L227","D140","L198","D478","R115","D863","R776","D935","R473","U722","R555","U528","L912","U268","R776","D223","L302","D878","R90","U52","L595","U898","L210","U886","R161","D794","L846","U404","R323","U616","R559","U510","R116","D740","L554","U231","R54","D328","L56","U750","R347","U376","L148","U454","L577","U61","L772","D862","R293","U82","L676","D508","L53","D860","L974","U733","R266","D323","L75","U218","L390","U757","L32","D455","R34","D363","L336","D67","R222","D977","L809","D909","L501","U483","L541","U923","R97","D437","L296","D941","L652","D144","L183","U369","L629","U535","L825","D26","R916","U131","R753","U383","L653","U631","R280","U500","L516","U959","R858","D830","R357","D87","R885","D389","L838","U550","R262","D529","R34","U20","L25","D553","L884","U806","L800","D988","R499","D360","R435","U381","R920","D691","R373","U714","L797","D677","L490","D976","L734","D585","L384","D352","R54","D23","R339","D439","L939","U104","L651","D927","L152"};
        testInputData.add(firstWire);
        testInputData.add(secondWire);
        CrossedWires cw = new CrossedWires(testInputData);

        List<Point> points = cw.getIntersectionPoints();
        Assert.assertNotNull(points, "Points was null");
    
        int distance = cw.getManhattanDistance(points);
        Assert.assertEquals(distance, 651);
    }

    @Test(groups = "day3")
    public void testRedditMtjody() {
        List<String[]> testInputData = new ArrayList<>();
        String[] firstWire = {"R1006","U867","R355","D335","L332","U787","L938","U987","L234","U940","R393","D966","R57","U900","R619","D693","L606","U272","L45","D772","R786","U766","R860","U956","L346","D526","R536","D882","L156","U822","L247","D279","R515","U467","R208","D659","R489","D295","R18","D863","L360","D28","R674","U203","L276","U518","L936","D673","L501","D414","L635","U497","R402","D530","L589","D247","L140","U697","R626","D130","L109","D169","L316","D2","R547","D305","L480","U871","R551","D48","L710","D655","R562","D395","L925","D349","L795","U308","L861","D265","R88","U116","L719","D204","R995","D197","R167","U786","R459","U978","L506","D232","L37","U530","L808","D75","R79","D469","L851","D152","R793","D362","L293","D760","L422","U516","L400","D275","L498","U877","R202","D302","L89","U924","L55","U161","L945","D578","R861","U853","R358","D427","L776","U571","R670","D29","R52","D116","R879","U359","R493","D872","L567","U382","R804","D168","R316","D376","R711","U627","R36","D241","R876","U407","L481","D360","R679","U561","L947","U449","R232","U176","R677","U850","R165","D257","R683","D666","L31","U237","L906","U810","R198","U890","L462","D928","R915","D778","L689","U271","L486","D918","L995","U61","R748","U516","L80","D109","L328","U649","L784","D546","R584","D751","L543","U217","L976","D400","L795","U332","R453","U399","L761","U823","R142","U532","R133","U255","R722","D726","L862","D845","L813","U981","R272","D800","L918","D712","R259","U972","R323","D214","R694","D629","L817","D814","L741","U111","L678","D627","L743","D509","R195","U875","R46","D344","L361","D102","L656","U897","L841","U124","L95","D770","L785","U767","L504","D309","L955","D142","L401","U914","R117","D897","R715","D117","R675","U248","R182","D725","L751","U562","R385","D120","R730","U185","L842","D446","L432","U640","R994","D482","R576","U915","R645","U109","R77","D983","L327","D209","R686","D486","R566","D406","R130","D759","R441","U895","R597","U443","L773","D704","R219","U222","R244","D11","L723","U804","L264","D121","L81","D454","R279","D642","L773","D653","R127","D199","R119","U509","L530"};
        String[] secondWire = {"L1003","D933","L419","D202","L972","U621","L211","U729","R799","U680","R925","U991","L167","U800","R198","U214","R386","D385","R117","D354","L914","D992","L519","U797","L28","D125","R163","D894","R390","D421","L75","D577","L596","U95","L403","U524","L160","D39","R209","D373","L464","U622","L824","D750","L857","U658","L109","D188","R357","D295","L227","U904","L268","U814","L483","U897","R785","U194","R865","U300","L787","U812","L321","D637","R761","U560","R800","U281","R472","D283","L490","D629","L207","D589","L310","D980","R613","U129","R668","U261","R82","D594","R627","D210","L865","U184","R387","U995","R497","U68","L776","U657","R559","D38","R981","D485","L196","D934","R313","D128","R269","D225","L32","U677","R425","U728","L665","D997","R271","D847","R715","U300","L896","D481","L30","U310","L793","D600","L219","D944","R197","D945","L564","D603","L225","U413","L900","U876","R281","D26","R449","D506","L846","D979","L817","D794","R309","D841","R735","U11","R373","U530","R74","D534","L668","U185","L972","D436","L377","D164","L88","U249","L8","D427","R711","D530","L850","D921","L644","U804","L388","U500","L813","D223","L572","U246","R309","U241","R185","D48","L545","U678","L344","D964","L772","D985","L178","U686","R937","U821","R214","D346","L648","D824","L943","D651","R98","D225","R832","D883","L814","D894","L995","D975","R440","D502","L177","D320","R675","U5","R188","D866","R974","U169","R432","D627","L424","D5","L273","U184","R657","U830","R681","U610","R170","U106","L726","D861","L257","D381","L918","D607","L820","D757","R556","D621","R21","U510","L575","D545","L590","D302","R446","D225","L164","D817","L520","D204","L33","U272","L648","D478","R945","U369","L924","D932","R46","D584","R630","U592","R613","U136","R253","D343","L983","U328","L442","D311","L258","U173","L574","U658","R283","D927","L247","D37","R36","D61","L692","U663","L207","U48","L114","U511","L924","U229","L221","D504","R345","U51","R464","D516","L115","D311","L71","D418","R378","D173","R154","U436","L403","D871","L765","D803","R630","U108","L79","U625","R77","U176","R911"};
        testInputData.add(firstWire);
        testInputData.add(secondWire);
        CrossedWires cw = new CrossedWires(testInputData);

        List<Point> points = cw.getIntersectionPoints();
        Assert.assertNotNull(points, "Points was null");
    
        int distance = cw.getManhattanDistance(points);
        Assert.assertEquals(distance, 1431);
    }

    @Test(groups = "day3")
    public void testGoogleMyadTahajody() {
        List<String[]> testInputData = new ArrayList<>();
        String[] firstWire = {"R997","D443","L406","D393","L66","D223","R135","U452","L918","U354","L985","D402","R257","U225","R298","U369","L762","D373","R781","D935","R363","U952","L174","D529","L127","D549","R874","D993","L890","U881","R549","U537","L174","U766","R244","U131","R861","D487","R849","U304","L653","D497","L711","D916","R12","D753","R19","D528","L944","D155","L507","U552","R844","D822","R341","U948","L922","U866","R387","U973","R534","U127","R48","U744","R950","U522","R930","U320","R254","D577","L142","D29","L24","D118","L583","D683","L643","U974","L683","U985","R692","D271","L279","U62","R157","D932","L556","U574","R615","D428","R296","U551","L452","U533","R475","D302","R39","U846","R527","D433","L453","D567","R614","U807","R463","U712","L247","D436","R141","U180","R783","D65","L379","D935","R989","U945","L901","D160","R356","D828","R45","D619","R655","U104","R37","U793","L360","D242","L137","D45","L671","D844","R112","U627","R976","U10","R942","U26","L470","D284","R832","D59","R97","D9","L320","D38","R326","U317","L752","U213","R840","U789","L152","D64","L628","U326","L640","D610","L769","U183","R844","U834","R342","U630","L945","D807","L270","D472","R369","D920","R283","U440","L597","U137","L133","U458","R266","U91","R137","U536","R861","D325","R902","D971","R891","U648","L573","U139","R951","D671","R996","U864","L749","D681","R255","U306","R154","U706","L817","D798","R109","D594","R496","D867","L217","D572","L166","U723","R66","D210","R732","D741","L21","D574","L523","D646","R313","D961","L474","U990","R125","U928","L58","U726","R200","D364","R244","U622","R823","U39","R918","U549","R667","U935","R372","U241","L56","D713","L735","U735","L812","U700","L408","U980","L242","D697","L580","D34","L266","U190","R876","U857","L967","U493","R871","U563","L241","D636","L467","D793","R304","U103","L950","D503","R487","D868","L358","D747","L338","D273","L485","D686","L974","D724","L534","U561","R729","D162","R731","D17","R305","U712","R472","D158","R921","U827","L944","D303","L526","D782","R575","U948","L401","D142","L48","U766","R799","D242","R821","U673","L120"};
        String[] secondWire = {"L991","D492","L167","D678","L228","U504","R972","U506","R900","U349","R329","D802","R616","U321","R252","U615","R494","U577","R322","D593","R348","U140","L676","U908","L528","D247","L498","D79","L247","D432","L569","U206","L668","D269","L25","U180","R181","D268","R655","D346","R716","U240","L227","D239","L223","U760","L10","D92","L633","D425","R198","U222","L542","D790","L596","U667","L87","D324","R456","U366","R888","U319","R784","D948","R641","D433","L519","U950","L689","D601","L860","U233","R21","D214","L89","U756","L361","U258","L950","D483","R252","U206","L184","U574","L540","U926","R374","U315","R357","U512","R503","U917","R745","D809","L94","D209","R616","U47","R61","D993","L589","D1","R387","D731","R782","U771","L344","U21","L88","U614","R678","U259","L311","D503","L477","U829","R861","D46","R738","D138","L564","D279","L669","U328","L664","U720","L746","U638","R790","D242","R504","D404","R409","D753","L289","U128","L603","D696","L201","D638","L902","D279","L170","D336","L311","U683","L272","U396","R180","D8","R816","D904","L129","D809","R168","D655","L459","D545","L839","U910","L642","U704","R301","D235","R469","D556","L624","D669","L174","D272","R515","D60","L668","U550","L903","D881","L600","D734","R815","U585","R39","D87","R198","D418","L150","D964","L818","D250","L198","D127","R521","U478","L489","D676","L84","U973","R384","D167","R372","D981","L733","D682","R746","D803","L834","D421","R153","U752","L381","D990","R216","U469","L446","D763","R332","D813","L701","U872","L39","D524","L469","U508","L700","D382","L598","U563","R652","D901","R638","D358","L486","D735","L232","U345","R746","U818","L13","U618","R881","D647","R191","U652","R358","U423","L137","D224","R415","U82","R778","D403","R661","D157","R393","D954","L308","D986","L293","U870","R13","U666","L232","U144","R887","U364","L507","U520","R823","D11","L927","D904","R618","U875","R143","D457","R459","D755","R677","D561","L499","U267","L721","U274","L700","D870","L612","D673","L811","D695","R929","D84","L578","U201","L745","U963","L185","D687","L662","U313","L853","U314","R336"};
        testInputData.add(firstWire);
        testInputData.add(secondWire);
        CrossedWires cw = new CrossedWires(testInputData);

        List<Point> points = cw.getIntersectionPoints();
        Assert.assertNotNull(points, "Points was null");
    
        int distance = cw.getManhattanDistance(points);
        Assert.assertEquals(distance, 232);
    }

    @Test(groups = "day3")
    public void testTwitterMTjody() {
        List<String[]> testInputData = new ArrayList<>();
        String[] firstWire = {"R995","D882","R144","U180","L638","U282","L907","D326","R731","D117","R323","U529","R330","U252","R73","U173","R345","U552","R230","U682","R861","U640","L930","U590","L851","D249","R669","D878","R951","D545","L690","U392","R609","D841","R273","D465","R546","U858","L518","U567","L474","D249","L463","D390","L443","U392","L196","U418","R433","U651","R520","D450","R763","U714","R495","D716","L219","D289","L451","D594","R874","U451","R406","U662","R261","D242","R821","D951","R808","D862","L871","U133","R841","D465","R710","U300","R879","D497","R85","U173","R941","U953","R705","U972","R260","D315","L632","U182","L26","D586","R438","U275","L588","U956","L550","D576","R738","U974","R648","D880","R595","D510","L789","U455","R627","U709","R7","D486","L184","U999","L404","U329","L852","D154","L232","U398","L587","U881","R938","D40","L657","D164","R45","D917","R106","U698","L824","D426","R879","U700","R847","D891","L948","U625","R663","D814","R217","U30","R610","D781","L415","D435","L904","U815","R152","U587","R287","U141","R866","D636","L290","D114","L751","D660","R6","U383","L263","U799","R330","U96","L6","U542","L449","D361","R486","U278","L990","U329","L519","U605","R501","D559","R916","U198","L499","D174","R513","U396","L473","D565","R337","D770","R211","D10","L591","D920","R367","D748","L330","U249","L307","D645","R661","U266","R234","D403","L513","U443","L989","D1","L674","D210","L537","D872","L607","D961","R894","U632","L195","U744","L426","U531","R337","D821","R113","U436","L700","U779","R555","U891","R268","D30","R958","U411","R904","U24","R760","D958","R231","U229","L561","D134","L382","D961","L237","U676","L223","U324","R663","D186","R833","U188","R419","D349","L721","U152","L912","U490","R10","D995","L98","U47","R140","D815","R826","U730","R808","U256","R479","D322","L504","D891","L413","D848","L732","U375","L307","U7","R682","U270","L495","D248","R691","D945","L70","U220","R635","D159","R269","D15","L161","U214","R814","D3","R354","D632","R469","D36","R85","U215","L243","D183","R140","U179","R812","U180","L905","U136","L34","D937","L875"};
        String[] secondWire = {"L999","D22","L292","U843","R390","U678","R688","D492","L489","U488","R305","U951","L636","U725","R402","U84","L676","U171","L874","D201","R64","D743","R372","U519","R221","U986","L393","D793","R72","D184","L553","D137","L187","U487","L757","U880","L535","U887","R481","U236","L382","D195","L388","D90","R125","U414","R512","D382","R972","U935","L172","D1","R957","U593","L151","D158","R396","D42","L30","D178","R947","U977","R67","D406","R744","D64","L677","U23","R792","U864","R259","U315","R314","U17","L37","D658","L642","U135","R624","U601","L417","D949","R203","D122","R76","D493","L569","U274","L330","U933","R815","D30","L630","D43","R86","U926","L661","D491","L541","D96","R868","D565","R664","D935","L336","D152","R63","U110","L782","U14","R172","D945","L732","D870","R404","U767","L907","D558","R748","U591","R461","D153","L635","D457","R241","U478","L237","U218","R393","U468","L182","D745","L388","D360","L222","D642","L151","U560","R437","D326","R852","U525","R717","U929","L470","U621","R421","U408","L540","D176","L69","U753","L200","U251","R742","U628","R534","U542","R85","D71","R283","U905","L418","D755","L593","U335","L114","D684","L576","D645","R652","D49","R86","D991","L838","D309","L73","U847","L418","U675","R991","U463","R314","D618","L433","U173","R869","D115","L18","U233","R541","U516","L570","U340","R264","D442","L259","U276","R433","D348","R524","D353","R336","D883","R580","U157","R79","D27","L134","D161","L748","D278","R322","D581","R654","D156","L930","D293","L156","U311","R807","D618","R408","U719","R366","D632","R307","D565","R478","D620","R988","D821","R365","D581","L946","D138","L943","U69","R620","U208","L407","U188","L122","U353","L751","U565","R849","D874","R668","D794","L140","D474","R289","D773","R344","D220","L55","D385","L394","U208","R305","U736","L896","D376","R331","D855","L466","U516","L741","U124","L825","U467","L525","D911","R76","U220","L610","U102","L261","D891","L585","U397","L152","U753","R822","D252","R106","U145","L7","U524","R343","U352","L357","D399","L446","D140","L723","U46","R687","D409","R884"};
        testInputData.add(firstWire);
        testInputData.add(secondWire);
        CrossedWires cw = new CrossedWires(testInputData);

        List<Point> points = cw.getIntersectionPoints();
        Assert.assertNotNull(points, "Points was null");
    
        int distance = cw.getManhattanDistance(points);
        Assert.assertEquals(distance, 2129);
    }

    @Test(groups = "day3")
    public void testGoogleMyadTvx() {
        List<String[]> testInputData = new ArrayList<>();
        String[] firstWire = {"R995","U671","R852","U741","R347","U539","R324","U865","R839","U885","R924","D983","R865","D823","R457","U124","R807","U941","R900","U718","R896","D795","R714","D129","R465","U470","L625","U200","L707","U552","L447","D305","L351","D571","L346","D38","L609","U581","L98","D707","R535","D332","L23","D630","L66","U833","L699","D445","L981","D81","L627","U273","R226","D51","L177","D806","R459","D950","R627","U462","L382","D847","R335","D573","L902","D581","L375","D288","R26","U922","R710","D159","R481","U907","L852","U926","L905","D140","L581","U908","R158","D955","R349","U708","R196","D13","R628","D862","L899","U50","L56","D89","L506","U65","R664","D243","L701","D887","L552","U665","L674","U813","L433","U87","R951","D970","R914","D705","R79","U328","L107","D86","L307","U550","L872","U224","L595","D600","R442","D426","L139","U528","R680","U35","L951","D275","L78","U113","L509","U821","R150","U668","L981","U102","L632","D864","R636","D597","R385","U322","R464","U249","L286","D138","L993","U329","R874","D849","R6","D632","L751","U235","R817","D495","L152","D528","R872","D91","R973","D399","L14","D544","R20","U54","L793","U90","L756","D36","R668","D221","L286","D681","L901","U312","R290","D874","L155","U863","R35","D177","R900","D865","R250","D810","L448","D648","L358","U308","R986","D562","L112","D858","R77","D880","L12","U702","L987","D662","R771","U6","R643","U845","R54","U987","L994","D878","L934","U805","L85","D760","L775","D578","L557","U544","L522","U495","L678","D68","R615","U700","L415","U597","L964","D858","R504","U805","L392","U140","L721","D215","L842","U929","L30","U64","L748","D136","R274","D605","R863","U460","L354","U78","R705","D298","L456","U117","R308","D186","L707","D367","R824","U965","L162","D19","R950","D582","R911","D436","L165","U506","L186","D906","L69","U412","R810","U13","L350","U314","R192","U963","L143","D937","L685","D574","R434","D937","L365","U646","L741","U703","L66","U959","L103","U799","L480","U340","R981","U96","L675","U662","R536","U15","R171","U382","R396","D431","L922","D662","R365","D921","R915"};
        String[] secondWire = {"L999","D290","L462","D773","L687","D706","L785","D219","R102","U307","L466","D166","R11","D712","L675","D844","R834","U665","R18","D91","R576","U187","L832","D969","L856","U389","R275","D587","L153","U329","R833","U762","R487","U607","R232","D361","R301","D738","L121","D896","R729","D767","R596","U996","R856","D849","R748","D506","L949","U166","R194","D737","L946","D504","L908","D980","L249","U885","R930","D910","R860","D647","L985","U688","L695","U207","L182","D444","R809","D394","R441","U664","L721","U31","R690","U597","R694","U942","R878","U320","R874","U162","L840","U575","L602","U649","L337","D775","L316","D588","R603","D175","L299","D538","R117","U213","L542","D429","R969","D641","R946","D373","L406","D119","R58","D686","R460","U906","L303","D13","L209","D546","R33","D545","R806","U615","R416","D294","L932","D877","R270","U350","R40","U720","L248","D13","L120","D657","L787","U313","R93","U922","R330","D184","L595","D578","R144","D213","L827","U787","R41","D142","R340","D733","L547","U595","L49","U652","L819","D691","R871","D628","R117","U880","L140","U736","L776","U151","R781","U582","R438","D382","R747","D390","R956","U44","L205","U680","R775","D152","L8","D80","R730","U922","L348","U363","L44","D355","R556","D880","R734","U60","R102","U776","L822","D732","L332","D769","L272","D784","R908","U58","L252","U290","R478","D192","R638","U548","R169","D946","L749","D638","L962","U844","R458","D283","R354","U95","L271","U738","R764","U757","R862","U176","L699","D810","L319","U866","R585","U743","L483","D502","R904","D248","L792","D37","R679","U607","L439","U326","L105","U95","L486","D214","R981","U260","R801","U212","L718","U302","L644","D987","L73","U228","L576","U507","L231","D63","R871","U802","R282","D237","L277","U418","R116","U194","R829","U786","L982","D131","R630","U358","R939","D945","L958","D961","R889","U949","L469","D980","R25","D523","L830","U343","R780","U581","R562","U115","L569","D959","R738","U299","L719","U732","L444","D579","L13","U242","L953","U169","R812","D821","R961","D742","R814","D483","R479","D123","L745","D892","L534"};
        testInputData.add(firstWire);
        testInputData.add(secondWire);
        CrossedWires cw = new CrossedWires(testInputData);

        List<Point> points = cw.getIntersectionPoints();
        Assert.assertNotNull(points, "Points was null");
    
        int distance = cw.getManhattanDistance(points);
        Assert.assertEquals(distance, 5319);
    }
}
